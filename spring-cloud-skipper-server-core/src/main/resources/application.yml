
info:
  app:
    name: "@project.artifactId@"
    version: "@project.version@"
management:
  security:
    roles: MANAGE
  context-path: /actuator
server:
  port: 7577
spring:
  main:
    banner-mode: "off"
  data:
    rest:
      base-path: /api
  jpa:
    generate-ddl: true
    properties:
      hibernate.id.new_generator_mappings: true
  cloud:
    skipper:
      server:
        version-info:
          dependency-fetch:
            enabled: false
          dependencies:
            spring-cloud-skipper-server:
              name: Spring Cloud Skipper Server
              version: "@project.version@"
            spring-cloud-skipper-shell:
              name: Spring Cloud Skipper Shell
              version: "@project.version@"
              url: "{repository}/org/springframework/cloud/spring-cloud-skipper-shell/{version}/spring-cloud-skipper-shell-{version}.jar"
              checksum-sha1-url: "{repository}/org/springframework/cloud/spring-cloud-skipper-shell/{version}/spring-cloud-skipper-shell-{version}.jar.sha1"
              checksum-sha256-url: "{repository}/org/springframework/cloud/spring-cloud-skipper-shell/{version}/spring-cloud-skipper-shell-{version}.jar.sha256"
        packageRepositories:
          -
            name: experimental
            url: http://skipper-repository.cfapps.io/repository/experimental
            description: Experimental Skipper Repository
            repoOrder: 0
          -
            name: local
            url: http://${spring.cloud.client.hostname}:7577
            local: true
            description: Default local database backed repository
            repoOrder: 1
      security:
        authorization:
          enabled: true
          permit-all-paths: "/authenticate,/security/info,/features,/assets/**,/dashboard/logout-success-oauth.html"
          authenticated-paths: "/api/**,/,/api"
          rules:
            # About

            - GET /api/about                      => hasRole('ROLE_VIEW')

             # AppDeployerDatas

            - GET /api/appDeployerDatas           => hasRole('ROLE_VIEW')

            # Deployers

            - GET /api/deployers                  => hasRole('ROLE_VIEW')

            ## Releases

            - GET /api/releases                   => hasRole('ROLE_VIEW')

            # Status

            - GET /api/release/status/**         => hasRole('ROLE_VIEW')

            # Manifest

            - GET /api/release/manifest/**       => hasRole('ROLE_VIEW')

            # Upgrade

            - POST /api/release/upgrade          => hasRole('ROLE_CREATE')

            # Rollback

            - POST /api/release/rollback/**      => hasRole('ROLE_CREATE')

            # Delete

            - DELETE /api/release/**             => hasRole('ROLE_CREATE')

            # History

            - GET /api/release/history/**        => hasRole('ROLE_VIEW')

            # List

            - GET /api/release/list              => hasRole('ROLE_VIEW')
            - GET /api/release/list/**           => hasRole('ROLE_VIEW')

            # Packages

            - GET /api/packages                    => hasRole('ROLE_VIEW')

            # Upload

            - POST /api/package/upload             => hasRole('ROLE_CREATE')

            # Install

            - POST /api/package/install             => hasRole('ROLE_CREATE')
            - POST /api/package/install/**          => hasRole('ROLE_CREATE')

            # Delete

            - DELETE /api/package/**                => hasRole('ROLE_CREATE')

            # PackageMetaData

            - GET /api/packageMetadata              => hasRole('ROLE_VIEW')
            - GET /api/packageMetadata/**           => hasRole('ROLE_VIEW')

            # Repositories

            - GET /api/repositories                 => hasRole('ROLE_VIEW')
            - GET /api/repositories/**              => hasRole('ROLE_VIEW')

            # Boot Endpoints

            - GET  /actuator/**                     => hasRole('ROLE_MANAGE')

  mustache:
    check-template-location: false

maven:
  remoteRepositories:
    springRepo:
      url: https://repo.spring.io/libs-snapshot

logging:
  level:
    org.springframework.beans: 'WARN'
    org.springframework.context: 'WARN'
    org.springframework.core.io: 'WARN'
    org.springframework.data: 'WARN'
    org.springframework.jmx: 'WARN'
    org.springframework.web: 'WARN'
    org.springframework.security: 'WARN'
    org.springframework.integration: 'WARN'
    org.springframework.boot: 'WARN'
    org.springframework.boot.context.embedded.tomcat: 'INFO'
    org.hibernate: 'WARN'
    # The following INFO is to log the generated password when using basic security
    org.springframework.boot.autoconfigure.security: 'INFO'
    org.springframework.cloud.skipper: 'INFO'
    org.springframework.statemachine: 'INFO'    
