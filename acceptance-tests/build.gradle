buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
		springCloudSkipper100VersionTag = '1.0.0'
		springCloudSkipper100Version = "${springCloudSkipper100VersionTag}.RELEASE"
		springCloudSkipper101VersionTag = '1.0.1'
		springCloudSkipper101Version = "${springCloudSkipper101VersionTag}.RELEASE"		
		springCloudSkipper102VersionTag = '1.0.2'
		springCloudSkipper102Version = "${springCloudSkipper102VersionTag}.RELEASE"
		springCloudSkipper103VersionTag = '1.0.3'
		springCloudSkipper103Version = "${springCloudSkipper103VersionTag}.RELEASE"
		springCloudSkipper104VersionTag = '1.0.4'
		springCloudSkipper104Version = "${springCloudSkipper104VersionTag}.RELEASE"
		springCloudSkipper105VersionTag = '1.0.5'
		springCloudSkipper105Version = "${springCloudSkipper105VersionTag}.BUILD-SNAPSHOT"		
		springCloudSkipper110VersionTag = '1.1.0'
		springCloudSkipper110Version = "${springCloudSkipper110VersionTag}.BUILD-SNAPSHOT"
		junitPlatformVersion = '1.1.0'
		junitJupiterVersion = '5.1.0'
		dockerComposeRuleJunit4Version = '0.33.0'
		gradleDockerVersion = '0.17.2'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://dl.bintray.com/palantir/releases" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.palantir.gradle.docker:gradle-docker:${gradleDockerVersion}")
	}
}

def getResolvedVersionOf(configuration, dependency) {
	return configuration.resolvedConfiguration.firstLevelModuleDependencies.findAll{
	it.moduleName == dependency
	}.moduleArtifacts.first()
}

configure(allprojects) {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'io.spring.dependency-management'

	group = 'org.springframework.cloud.skipper.acceptance'

	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://repo.spring.io/release" }
		maven { url "https://dl.bintray.com/palantir/releases" }
		mavenLocal()
		maven {
			url "https://repo.springsource.org/ext-private-local"
			credentials {
				username = System.getenv('ARTIFACTORY_USERNAME') ?: artifactoryUsername
				password = System.getenv('ARTIFACTORY_PASSWORD') ?: artifactoryPassword
			}
		}
	}

	compileJava {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
	}

	compileTestJava {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
	}

	dependencyManagement {
		imports {
		}
		dependencies {
			dependency "com.palantir.docker.compose:docker-compose-rule-junit4:$dockerComposeRuleJunit4Version"
			dependency "org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion"
			// to run junit5 in sts
			dependency "org.junit.platform:junit-platform-engine:$junitPlatformVersion"
			dependency "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"
			dependency "org.junit.platform:junit-platform-runner:$junitPlatformVersion"
			dependency "org.junit.platform:junit-platform-suite-api:$junitPlatformVersion"
		}
	}
}

configure(subprojects) { subproject ->
	apply plugin: 'org.springframework.boot'

	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}
	
	test {
		useJUnitPlatform {
			if (project.hasProperty('skipperIncludeTags')) {
				includeTags = skipperIncludeTags.split(',')
			}
			if (project.hasProperty('skipperExcludeTags')) {
				excludeTags = skipperExcludeTags.split(',')
			}
		}
	}
}

project('spring-cloud-skipper-acceptance-core') {
	dependencies {
		compile('com.palantir.docker.compose:docker-compose-rule-junit4')
		compile('org.junit.jupiter:junit-jupiter-api')
		compile('org.junit.jupiter:junit-jupiter-engine')
		compile('org.junit.jupiter:junit-jupiter-params')

		compile('org.junit.platform:junit-platform-engine')
		compile('org.junit.platform:junit-platform-launcher')
		compile('org.junit.platform:junit-platform-runner')
		compile('org.junit.platform:junit-platform-suite-api')

		testCompile('org.springframework.boot:spring-boot-starter-test')
	}
}

project('spring-cloud-skipper-acceptance-tests') {
	//apply plugin: 'org.junit.platform.gradle.plugin'

	dependencies {
		compile project(":spring-cloud-skipper-acceptance-core")
		testCompile('org.springframework.boot:spring-boot-starter-test')
		testCompile('org.springframework.boot:spring-boot-starter-web')
	}

	build.dependsOn ':spring-cloud-skipper-acceptance-image-legacy100:docker'
	build.dependsOn ':spring-cloud-skipper-acceptance-image-legacy101:docker'
	build.dependsOn ':spring-cloud-skipper-acceptance-image-legacy102:docker'
	build.dependsOn ':spring-cloud-skipper-acceptance-image-legacy103:docker'
	build.dependsOn ':spring-cloud-skipper-acceptance-image-legacy104:docker'
	build.dependsOn ':spring-cloud-skipper-acceptance-image-legacy105:docker'
	build.dependsOn ':spring-cloud-skipper-acceptance-image-legacy110:docker'
	build.dependsOn ':spring-cloud-skipper-acceptance-image-drivers100:docker'
	build.dependsOn ':spring-cloud-skipper-acceptance-image-drivers101:docker'
	build.dependsOn ':spring-cloud-skipper-acceptance-image-drivers102:docker'
	build.dependsOn ':spring-cloud-skipper-acceptance-image-drivers103:docker'
	build.dependsOn ':spring-cloud-skipper-acceptance-image-drivers104:docker'
	build.dependsOn ':spring-cloud-skipper-acceptance-image-drivers105:docker'
	build.dependsOn ':spring-cloud-skipper-acceptance-image-drivers110:docker'
}

